# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# the akka-persistence-journal in use
inmemory-journal {
  class = "akka.persistence.inmemory.journal.InMemoryAsyncWriteJournal"

  # ask timeout on Futures
  ask-timeout = "10s"
}

# the akka-persistence-snapshot-store in use
inmemory-snapshot-store {
  class = "akka.persistence.inmemory.snapshot.InMemorySnapshotStore"

  # ask timeout on Futures
  ask-timeout = "10s"
}

inmemory-read-journal {
  # Implementation class of the InMemory ReadJournalProvider
  class = "akka.persistence.inmemory.query.InMemoryReadJournalProvider"

  # Absolute path to the write journal plugin configuration section to get the event adapters from
  write-plugin = "inmemory-journal"

  # there are two modes; 'sequence' or 'uuid'.
  #
  # | mode     | offset        | description                                      |
  # | -------- | --------------| ------------------------------------------------ |
  # | sequence | NoOffset      | the query will return Sequence offset types      |
  # | sequence | Sequence      | the query will return Sequence offset types      |
  # | uuid     | NoOffset      | the query will return TimeBasedUUID offset types |
  # | uuid     | TimeBasedUUID | the query will return TimeBasedUUID offset types |
  #
  offset-mode = "sequence"

  # ask timeout on Futures
  ask-timeout = "10s"

  # New events are retrieved (polled) with this interval.
  refresh-interval = "100ms"

  # How many events to fetch in one query (replay) and keep buffered until they
  # are delivered downstreams.
  max-buffer-size = "100"
}

# the storage in use
inmemory-storage {
  # default storage using direct inmemory journals
  class = "akka.persistence.inmemory.extension.StorageExtensionImpl"
}

